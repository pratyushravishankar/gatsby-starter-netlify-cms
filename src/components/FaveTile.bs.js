// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var GatsbyLink = require("gatsby-link");
var PreviewCompatibleImageJs = require("./PreviewCompatibleImage.js");

var make = PreviewCompatibleImageJs.default;

var PreviewCompatibleImage = {
  make: make
};

function FaveTile(Props) {
  var post = Props.post;
  var match = React.useState((function () {
          return /* Image */1;
        }));
  var setTileState = match[1];
  var possNullImg = post.frontmatter.featuredimage;
  var renderImageJsx = function (param) {
    return React.createElement("div", undefined, (possNullImg == null) ? null : React.createElement("div", {
                      className: "featured-thumbnail"
                    }, React.createElement(make, {
                          imageInfo: {
                            image: possNullImg,
                            alt: "featured image thumbnail for post ${post##frontmatter##title}"
                          }
                        })));
  };
  var renderWordsJsx = function (param) {
    return React.createElement("div", undefined, React.createElement("header", undefined, (possNullImg == null) ? null : React.createElement("div", {
                          className: "featured-thumbnail"
                        }, React.createElement(make, {
                              imageInfo: {
                                image: possNullImg,
                                alt: "featured image thumbnail for post ${post##frontmatter##title}"
                              }
                            })), React.createElement("p", {
                        className: "post-meta"
                      }, React.createElement(GatsbyLink.default, {
                            to: post.fields.slug,
                            className: "title has-text-primary is-size-4",
                            children: post.frontmatter.title
                          }), React.createElement("span", undefined), React.createElement("span", {
                            className: "subtitle is-size-5 is-block"
                          }, post.frontmatter.date))), React.createElement("p", undefined, post.excerpt, React.createElement("br", undefined), React.createElement("br", undefined), React.createElement(GatsbyLink.default, {
                        to: post.fields.slug,
                        className: "button",
                        children: "Keep Reading"
                      })));
  };
  return React.createElement("div", {
              className: "is-parent column is-6"
            }, React.createElement("article", {
                  className: "blog-list-item tile is-child box notification ${\n      post##frontmatter##featuredpost ? 'is-featured' : ''\n      }",
                  onMouseEnter: (function (param) {
                      return Curry._1(setTileState, (function (param) {
                                    return /* Words */0;
                                  }));
                    }),
                  onMouseLeave: (function (param) {
                      return Curry._1(setTileState, (function (param) {
                                    return /* Image */1;
                                  }));
                    })
                }, match[0] ? renderImageJsx(undefined) : renderWordsJsx(undefined)));
}

var Link;

var make$1 = FaveTile;

var $$default = FaveTile;

exports.Link = Link;
exports.PreviewCompatibleImage = PreviewCompatibleImage;
exports.make = make$1;
exports.$$default = $$default;
exports.default = $$default;
exports.__esModule = true;
/* make Not a pure module */
